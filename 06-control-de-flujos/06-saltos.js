// CONTROL DE FLUJO: SALTOS
// Estas instrucciones permiten alterar el flujo normal de ejecuci√≥n.

// -------------------------------
// BREAK
// -------------------------------
// Se utiliza para salir de un bucle antes de que finalice naturalmente.

for (let i = 1; i <= 10; i++) {
  if (i === 5) {
    console.log("üö´ Se encontr√≥ el n√∫mero 5. Se rompe el bucle.");
    break; // Sale del bucle completamente
  }
  console.log("üîÅ N√∫mero:", i);
}

// Tambi√©n se usa en switch para evitar que se ejecuten todos los casos

// -------------------------------
// CONTINUE
// -------------------------------
// Se utiliza para *saltar* la iteraci√≥n actual del bucle y continuar con la siguiente

for (let i = 1; i <= 5; i++) {
  if (i === 3) {
    console.log("‚è≠Ô∏è Salto el n√∫mero 3");
    continue; // Salta lo que queda de esta iteraci√≥n
  }
  console.log("‚úÖ N√∫mero v√°lido:", i);
}

// -------------------------------
// RETURN
// -------------------------------
// Se utiliza en funciones para devolver un valor o salir de la funci√≥n anticipadamente

function saludar(nombre) {
  if (!nombre) {
    console.log("‚ö†Ô∏è Nombre no v√°lido");
    return; // Sale de la funci√≥n si no se proporciona nombre
  }
  return `Hola, ${nombre}!`; // Devuelve un saludo si todo est√° bien
}

console.log(saludar("Ana")); // Hola, Ana!
console.log(saludar("")); // ‚ö†Ô∏è Nombre no v√°lido
